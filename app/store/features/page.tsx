"use client"

import { useState } from "react"
import { Wallet, Glasses, Wifi, Trophy, Globe, Camera } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Dialog, DialogContent, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { useBlockchain } from "@/components/store/BlockchainProvider"
import { useARVR } from "@/components/store/ARVRProvider"
import { useIoT } from "@/components/store/IoTProvider"
import { useGamification } from "@/components/store/GamificationProvider"
import { useMultiLanguage } from "@/components/store/MultiLanguageProvider"

export default function FeaturesPage() {
  const [activeDemo, setActiveDemo] = useState<string | null>(null)

  const { connectWallet, isWalletConnected, nftProducts } = useBlockchain()
  const { startARSession, isARSupported, startVRSession, isVRSupported } = useARVR()
  const { devices, connectDevice } = useIoT()
  const { userLevel, achievements, earnXP } = useGamification()
  const { changeLanguage, availableLanguages, currentLanguage } = useMultiLanguage()

  const handleARDemo = async () => {
    setActiveDemo("ar")
    const success = await startARSession("try-on", "1")
    if (success) {
      earnXP(50, "Tr·∫£i nghi·ªám th·ª≠ ƒë·ªì AR")
    }
  }

  const handleVRDemo = async () => {
    setActiveDemo("vr")
    const success = await startVRSession("showroom")
    if (success) {
      earnXP(75, "Tr·∫£i nghi·ªám ph√≤ng tr∆∞ng b√†y VR")
    }
  }

  const handleWalletConnect = async () => {
    const success = await connectWallet("metamask")
    if (success) {
      earnXP(100, "K·∫øt n·ªëi v√≠ blockchain")
    }
  }

  const handleIoTConnect = async () => {
    const success = await connectDevice("smart_mirror", {
      name: "G∆∞∆°ng th√¥ng minh",
      brand: "HiMirror",
      location: "Ph√≤ng ng·ªß",
    })
    if (success) {
      earnXP(80, "K·∫øt n·ªëi thi·∫øt b·ªã IoT")
    }
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="text-center mb-12">
        <h1 className="text-4xl font-bold text-gray-900 mb-4">üöÄ Tr·∫£i nghi·ªám mua s·∫Øm t∆∞∆°ng lai</h1>
        <p className="text-xl text-gray-600 max-w-3xl mx-auto">
          Tr·∫£i nghi·ªám c√¥ng ngh·ªá mua s·∫Øm ti√™n ti·∫øn nh·∫•t: thanh to√°n blockchain, th·ª≠ ƒë·ªì AR/VR, t√≠ch h·ª£p IoT th√¥ng minh, h·ªá th·ªëng gamification v√† h·ªó tr·ª£ ƒëa ng√¥n ng·ªØ
        </p>
      </div>

      {/* T·ªïng quan t√≠nh nƒÉng */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12">
        <Card className="hover:shadow-lg transition-shadow">
          <CardHeader>
            <div className="flex items-center space-x-3">
              <Wallet className="h-8 w-8 text-blue-600" />
              <div>
                <CardTitle>T√≠ch h·ª£p Blockchain</CardTitle>
                <Badge variant={isWalletConnected ? "default" : "secondary"}>
                  {isWalletConnected ? "ƒê√£ k·∫øt n·ªëi" : "Ch∆∞a k·∫øt n·ªëi"}
                </Badge>
              </div>
            </div>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">H·ªó tr·ª£ thanh to√°n ti·ªÅn ƒëi·ªán t·ª≠, s·∫£n ph·∫©m NFT v√† h·ª£p ƒë·ªìng th√¥ng minh</p>
            <Button onClick={handleWalletConnect} disabled={isWalletConnected} className="w-full">
              {isWalletConnected ? "V√≠ ƒë√£ k·∫øt n·ªëi" : "K·∫øt n·ªëi v√≠"}
            </Button>
          </CardContent>
        </Card>

        <Card className="hover:shadow-lg transition-shadow">
          <CardHeader>
            <div className="flex items-center space-x-3">
              <Glasses className="h-8 w-8 text-purple-600" />
              <div>
                <CardTitle>Mua s·∫Øm AR/VR</CardTitle>
                <Badge variant={isARSupported ? "default" : "secondary"}>{isARSupported ? "H·ªó tr·ª£" : "Kh√¥ng h·ªó tr·ª£"}</Badge>
              </div>
            </div>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">Th·ª≠ ƒë·ªì ·∫£o, xem tr∆∞·ªõc s·∫£n ph·∫©m 3D v√† tr·∫£i nghi·ªám mua s·∫Øm ƒë·∫Øm ch√¨m</p>
            <div className="space-y-2">
              <Button onClick={handleARDemo} disabled={!isARSupported} className="w-full">
                B·∫Øt ƒë·∫ßu th·ª≠ ƒë·ªì AR
              </Button>
              <Button onClick={handleVRDemo} disabled={!isVRSupported} variant="outline" className="w-full">
                V√†o ph√≤ng tr∆∞ng b√†y VR
              </Button>
            </div>
          </CardContent>
        </Card>

        <Card className="hover:shadow-lg transition-shadow">
          <CardHeader>
            <div className="flex items-center space-x-3">
              <Wifi className="h-8 w-8 text-green-600" />
              <div>
                <CardTitle>T√≠ch h·ª£p IoT th√¥ng minh</CardTitle>
                <Badge variant="secondary">{devices.length} thi·∫øt b·ªã</Badge>
              </div>
            </div>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">K·∫øt n·ªëi thi·∫øt b·ªã nh√† th√¥ng minh, t·∫°o tr·∫£i nghi·ªám mua s·∫Øm t·ª± ƒë·ªông</p>
            <Button onClick={handleIoTConnect} className="w-full">
              K·∫øt n·ªëi thi·∫øt b·ªã IoT
            </Button>
          </CardContent>
        </Card>

        <Card className="hover:shadow-lg transition-shadow">
          <CardHeader>
            <div className="flex items-center space-x-3">
              <Trophy className="h-8 w-8 text-yellow-600" />
              <div>
                <CardTitle>H·ªá th·ªëng Gamification</CardTitle>
                <Badge variant="default">C·∫•p ƒë·ªô {userLevel.level}</Badge>
              </div>
            </div>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">Ph·∫ßn th∆∞·ªüng ƒëi·ªÉm, h·ªá th·ªëng th√†nh t√≠ch v√† b·∫£ng x·∫øp h·∫°ng c·∫°nh tranh</p>
            <div className="text-sm text-gray-600 mb-2">
              ƒêi·ªÉm kinh nghi·ªám: {userLevel.xp}/{userLevel.xpToNext}
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2">
              <div
                className="bg-yellow-600 h-2 rounded-full"
                style={{ width: `${(userLevel.xp / userLevel.xpToNext) * 100}%` }}
              ></div>
            </div>
          </CardContent>
        </Card>

        <Card className="hover:shadow-lg transition-shadow">
          <CardHeader>
            <div className="flex items-center space-x-3">
              <Globe className="h-8 w-8 text-indigo-600" />
              <div>
                <CardTitle>H·ªó tr·ª£ ƒëa ng√¥n ng·ªØ</CardTitle>
                <Badge variant="outline">{currentLanguage.nativeName}</Badge>
              </div>
            </div>
          </CardHeader>
          <CardContent>
            <p className="text-gray-600 mb-4">H·ªó tr·ª£ nhi·ªÅu ng√¥n ng·ªØ v√† b·∫£n ƒë·ªãa h√≥a khu v·ª±c</p>
            <select
              className="w-full p-2 border rounded"
              value={currentLanguage.code}
              onChange={(e) => changeLanguage(e.target.value)}
            >
              {availableLanguages.map((lang) => (
                <option key={lang.code} value={lang.code}>
                  {lang.flag} {lang.nativeName}
                </option>
              ))}
            </select>
          </CardContent>
        </Card>
      </div>

      {/* Hi·ªÉn th·ªã t√≠nh nƒÉng chi ti·∫øt */}
      <Tabs defaultValue="blockchain" className="space-y-6">
        <TabsList className="grid w-full grid-cols-5">
          <TabsTrigger value="blockchain">Blockchain</TabsTrigger>
          <TabsTrigger value="arvr">AR/VR</TabsTrigger>
          <TabsTrigger value="iot">IoT</TabsTrigger>
          <TabsTrigger value="gamification">Gamification</TabsTrigger>
          <TabsTrigger value="multilang">ƒêa ng√¥n ng·ªØ</TabsTrigger>
        </TabsList>

        <TabsContent value="blockchain" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Wallet className="h-6 w-6" />
                <span>T√≠nh nƒÉng t√≠ch h·ª£p Blockchain</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h3 className="font-semibold mb-3">üîê H·ªó tr·ª£ v√≠ ti·ªÅn ƒëi·ªán t·ª≠</h3>
                  <ul className="space-y-2 text-sm text-gray-600">
                    <li>‚Ä¢ T√≠ch h·ª£p v√≠ MetaMask</li>
                    <li>‚Ä¢ H·ªó tr·ª£ WalletConnect</li>
                    <li>‚Ä¢ Thanh to√°n b·∫±ng nhi·ªÅu lo·∫°i ti·ªÅn ƒëi·ªán t·ª≠</li>
                    <li>‚Ä¢ X·ª≠ l√Ω giao d·ªãch an to√†n</li>
                  </ul>
                </div>
                <div>
                  <h3 className="font-semibold mb-3">üé® Th·ªã tr∆∞·ªùng s·∫£n ph·∫©m NFT</h3>
                  <ul className="space-y-2 text-sm text-gray-600">
                    <li>‚Ä¢ NFT th·ªùi trang k·ªπ thu·∫≠t s·ªë</li>
                    <li>‚Ä¢ B·ªô s∆∞u t·∫≠p ·∫£o</li>
                    <li>‚Ä¢ X√°c minh h·ª£p ƒë·ªìng th√¥ng minh</li>
                    <li>‚Ä¢ Ch·ª©ng minh quy·ªÅn s·ªü h·ªØu</li>
                  </ul>
                </div>
              </div>

              {nftProducts.length > 0 && (
                <div className="mt-6">
                  <h3 className="font-semibold mb-3">üåü S·∫£n ph·∫©m NFT n·ªïi b·∫≠t</h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {nftProducts.slice(0, 2).map((nft) => (
                      <Card key={nft.id} className="border">
                        <CardContent className="p-4">
                          <div className="flex items-center space-x-3">
                            <div className="w-16 h-16 bg-gradient-to-br from-purple-400 to-blue-500 rounded-lg flex items-center justify-center text-white font-bold">
                              NFT
                            </div>
                            <div className="flex-1">
                              <h4 className="font-medium">{nft.name}</h4>
                              <p className="text-sm text-gray-600">{nft.description}</p>
                              <div className="flex items-center space-x-2 mt-2">
                                <Badge variant="outline">{nft.price} ETH</Badge>
                                {nft.verified && <Badge variant="default">‚úì ƒê√£ x√°c minh</Badge>}
                              </div>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </div>
              )}
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="arvr" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Glasses className="h-6 w-6" />
                <span>Tr·∫£i nghi·ªám mua s·∫Øm AR/VR</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h3 className="font-semibold mb-3">üì± T√≠nh nƒÉng th·ª≠ ƒë·ªì AR</h3>
                  <div className="aspect-video bg-gray-100 rounded-lg mb-4 flex items-center justify-center">
                    <img
                      src="/images/ar-tryOn-demo.png"
                      alt="Demo th·ª≠ ƒë·ªì AR"
                      className="w-full h-full object-cover rounded-lg"
                    />
                  </div>
                  <ul className="space-y-2 text-sm text-gray-600">
                    <li>‚Ä¢ Th·ª≠ ƒë·ªì ·∫£o th·ªùi gian th·ª±c</li>
                    <li>‚Ä¢ Xem tr∆∞·ªõc s·∫£n ph·∫©m 3D</li>
                    <li>‚Ä¢ Ch·ª©c nƒÉng ch·ª•p ·∫£nh chia s·∫ª</li>
                    <li>‚Ä¢ Nhi·ªÅu hi·ªáu ·ª©ng b·ªô l·ªçc</li>
                  </ul>
                </div>
                <div>
                  <h3 className="font-semibold mb-3">ü•Ω Ph√≤ng tr∆∞ng b√†y ·∫£o VR</h3>
                  <div className="aspect-video bg-gradient-to-br from-blue-400 to-purple-600 rounded-lg mb-4 flex items-center justify-center text-white">
                    <div className="text-center">
                      <Glasses className="h-12 w-12 mx-auto mb-2" />
                      <p className="font-semibold">Tr·∫£i nghi·ªám mua s·∫Øm ƒë·∫Øm ch√¨m</p>
                    </div>
                  </div>
                  <ul className="space-y-2 text-sm text-gray-600">
                    <li>‚Ä¢ Ph√≤ng tr∆∞ng b√†y ·∫£o 360¬∞</li>
                    <li>‚Ä¢ Tr∆∞ng b√†y s·∫£n ph·∫©m t∆∞∆°ng t√°c</li>
                    <li>‚Ä¢ Tr·ª£ l√Ω mua s·∫Øm ·∫£o</li>
                    <li>‚Ä¢ Tr·∫£i nghi·ªám mua s·∫Øm x√£ h·ªôi</li>
                  </ul>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="iot" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Wifi className="h-6 w-6" />
                <span>T√≠ch h·ª£p IoT th√¥ng minh</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div>
                  <h3 className="font-semibold mb-3">üè† Nh√† th√¥ng minh</h3>
                  <ul className="space-y-2 text-sm text-gray-600">
                    <li>‚Ä¢ Theo d√µi kho t·ªß l·∫°nh th√¥ng minh</li>
                    <li>‚Ä¢ Mua s·∫Øm b·∫±ng gi·ªçng n√≥i qua loa th√¥ng minh</li>
                    <li>‚Ä¢ Th·ª≠ ƒë·ªì qua g∆∞∆°ng th√¥ng minh</li>
                    <li>‚Ä¢ H·ªá th·ªëng t·ª± ƒë·ªông b·ªï sung</li>
                  </ul>
                </div>
                <div>
                  <h3 className="font-semibold mb-3">üå°Ô∏è C·∫£m bi·∫øn m√¥i tr∆∞·ªùng</h3>
                  <ul className="space-y-2 text-sm text-gray-600">
                    <li>‚Ä¢ Gi√°m s√°t nhi·ªát ƒë·ªô v√† ƒë·ªô ·∫©m</li>
                    <li>‚Ä¢ ƒêi·ªÅu ch·ªânh theo c·∫£m bi·∫øn √°nh s√°ng</li>
                    <li>‚Ä¢ Ki·ªÉm tra ch·∫•t l∆∞·ª£ng kh√¥ng kh√≠</li>
                    <li>‚Ä¢ ƒê·ªÅ xu·∫•t c√° nh√¢n h√≥a</li>
                  </ul>
                </div>
                <div>
                  <h3 className="font-semibold mb-3">üîÑ T·ª± ƒë·ªông h√≥a</h3>
                  <ul className="space-y-2 text-sm text-gray-600">
                    <li>‚Ä¢ Theo d√µi m·ª©c s·ª≠ d·ª•ng</li>
                    <li>‚Ä¢ Nh·∫Øc nh·ªü b·ªï sung th√¥ng minh</li>
                    <li>‚Ä¢ ƒê·∫∑t h√†ng d·ª± ƒëo√°n</li>
                    <li>‚Ä¢ T·ªëi ∆∞u h√≥a ti·∫øt ki·ªám nƒÉng l∆∞·ª£ng</li>
                  </ul>
                </div>
              </div>

              <div className="mt-6">
                <h3 className="font-semibold mb-3">üì± Thi·∫øt b·ªã ƒë√£ k·∫øt n·ªëi</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                  {devices.map((device) => (
                    <Card key={device.id} className="border">
                      <CardContent className="p-4">
                        <div className="flex items-center justify-between mb-2">
                          <h4 className="font-medium">{device.name}</h4>
                          <Badge variant={device.status === "online" ? "default" : "secondary"}>
                            {device.status === "online" ? "Tr·ª±c tuy·∫øn" : "Ngo·∫°i tuy·∫øn"}
                          </Badge>
                        </div>
                        <p className="text-sm text-gray-600 mb-2">
                          {device.brand} ‚Ä¢ {device.location}
                        </p>
                        <div className="flex flex-wrap gap-1">
                          {device.capabilities.slice(0, 2).map((capability) => (
                            <Badge key={capability} variant="outline" className="text-xs">
                              {capability}
                            </Badge>
                          ))}
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="gamification" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Trophy className="h-6 w-6" />
                <span>H·ªá th·ªëng Gamification</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h3 className="font-semibold mb-3">üèÜ H·ªá th·ªëng c·∫•p ƒë·ªô</h3>
                  <div className="bg-gradient-to-r from-yellow-400 to-orange-500 rounded-lg p-4 text-white mb-4">
                    <div className="flex items-center space-x-3">
                      <div className="text-3xl">{userLevel.icon}</div>
                      <div>
                        <h4 className="font-bold">C·∫•p ƒë·ªô {userLevel.level}</h4>
                        <p className="text-sm opacity-90">{userLevel.title}</p>
                      </div>
                    </div>
                    <div className="mt-3">
                      <div className="flex justify-between text-sm mb-1">
                        <span>Kinh nghi·ªám</span>
                        <span>
                          {userLevel.xp}/{userLevel.xpToNext}
                        </span>
                      </div>
                      <div className="w-full bg-white bg-opacity-30 rounded-full h-2">
                        <div
                          className="bg-white h-2 rounded-full transition-all duration-300"
                          style={{ width: `${(userLevel.xp / userLevel.xpToNext) * 100}%` }}
                        ></div>
                      </div>
                    </div>
                  </div>
                  <div>
                    <h4 className="font-medium mb-2">Quy·ªÅn l·ª£i th√†nh vi√™n</h4>
                    <ul className="space-y-1 text-sm text-gray-600">
                      {userLevel.benefits.map((benefit, index) => (
                        <li key={index}>‚Ä¢ {benefit}</li>
                      ))}
                    </ul>
                  </div>
                </div>
                <div>
                  <h3 className="font-semibold mb-3">üéñÔ∏è H·ªá th·ªëng th√†nh t√≠ch</h3>
                  <div className="space-y-3">
                    {achievements.slice(0, 4).map((achievement) => (
                      <div key={achievement.id} className="flex items-center space-x-3 p-3 border rounded-lg">
                        <div className="text-2xl">{achievement.icon}</div>
                        <div className="flex-1">
                          <h4 className="font-medium">{achievement.name}</h4>
                          <p className="text-sm text-gray-600">{achievement.description}</p>
                          {achievement.progress !== undefined && (
                            <div className="mt-2">
                              <div className="flex justify-between text-xs text-gray-500 mb-1">
                                <span>Ti·∫øn ƒë·ªô</span>
                                <span>
                                  {achievement.progress}/{achievement.maxProgress}
                                </span>
                              </div>
                              <div className="w-full bg-gray-200 rounded-full h-1">
                                <div
                                  className="bg-blue-600 h-1 rounded-full"
                                  style={{ width: `${(achievement.progress! / achievement.maxProgress!) * 100}%` }}
                                ></div>
                              </div>
                            </div>
                          )}
                        </div>
                        <div className="text-right">
                          <Badge variant={achievement.unlocked ? "default" : "secondary"}>
                            {achievement.unlocked ? "ƒê√£ m·ªü kh√≥a" : "Ch∆∞a m·ªü kh√≥a"}
                          </Badge>
                          <p className="text-sm text-gray-600 mt-1">{achievement.points} ƒëi·ªÉm</p>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        <TabsContent value="multilang" className="space-y-6">
          <Card>
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <Globe className="h-6 w-6" />
                <span>ƒêa ng√¥n ng·ªØ v√† b·∫£n ƒë·ªãa h√≥a</span>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h3 className="font-semibold mb-3">üåç Ng√¥n ng·ªØ h·ªó tr·ª£</h3>
                  <div className="grid grid-cols-2 gap-2">
                    {availableLanguages.map((lang) => (
                      <div
                        key={lang.code}
                        className={`p-3 border rounded-lg cursor-pointer transition-colors ${
                          currentLanguage.code === lang.code ? "border-blue-500 bg-blue-50" : "hover:bg-gray-50"
                        }`}
                        onClick={() => changeLanguage(lang.code)}
                      >
                        <div className="flex items-center space-x-2">
                          <span className="text-xl">{lang.flag}</span>
                          <div>
                            <p className="font-medium text-sm">{lang.nativeName}</p>
                            <p className="text-xs text-gray-600">{lang.name}</p>
                          </div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
                <div>
                  <h3 className="font-semibold mb-3">üí± T√≠nh nƒÉng b·∫£n ƒë·ªãa h√≥a</h3>
                  <ul className="space-y-3 text-sm">
                    <li className="flex items-center space-x-2">
                      <Badge variant="outline">Ti·ªÅn t·ªá</Badge>
                      <span>T·ª± ƒë·ªông chuy·ªÉn ƒë·ªïi v√† ƒë·ªãnh d·∫°ng ti·ªÅn t·ªá</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Badge variant="outline">Ng√†y th√°ng</Badge>
                      <span>ƒê·ªãnh d·∫°ng ng√†y gi·ªù theo ƒë·ªãa ph∆∞∆°ng</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Badge variant="outline">S·ªë</Badge>
                      <span>Hi·ªÉn th·ªã ƒë·ªãnh d·∫°ng s·ªë theo khu v·ª±c</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Badge variant="outline">VƒÉn h√≥a</Badge>
                      <span>Thi·∫øt k·∫ø giao di·ªán ph√π h·ª£p v·ªõi vƒÉn h√≥a ƒë·ªãa ph∆∞∆°ng</span>
                    </li>
                    <li className="flex items-center space-x-2">
                      <Badge variant="outline">RTL</Badge>
                      <span>H·ªó tr·ª£ h∆∞·ªõng vƒÉn b·∫£n t·ª´ ph·∫£i sang tr√°i</span>
                    </li>
                  </ul>

                  <div className="mt-6 p-4 bg-gray-50 rounded-lg">
                    <h4 className="font-medium mb-2">C√†i ƒë·∫∑t hi·ªán t·∫°i</h4>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span>Ng√¥n ng·ªØ:</span>
                        <span>{currentLanguage.nativeName}</span>
                      </div>
                      <div className="flex justify-between">
                        <span>H∆∞·ªõng:</span>
                        <span>{currentLanguage.rtl ? "Ph·∫£i sang tr√°i" : "Tr√°i sang ph·∫£i"}</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>

      {/* Khu v·ª±c demo */}
      {activeDemo && (
        <Dialog open={!!activeDemo} onOpenChange={() => setActiveDemo(null)}>
          <DialogContent className="max-w-4xl">
            <DialogHeader>
              <DialogTitle>
                {activeDemo === "ar" && "Demo th·ª≠ ƒë·ªì AR"}
                {activeDemo === "vr" && "Demo ph√≤ng tr∆∞ng b√†y VR"}
              </DialogTitle>
            </DialogHeader>
            <div className="aspect-video bg-gradient-to-br from-purple-400 to-blue-600 rounded-lg flex items-center justify-center text-white">
              <div className="text-center">
                {activeDemo === "ar" && (
                  <>
                    <Camera className="h-16 w-16 mx-auto mb-4" />
                    <h3 className="text-2xl font-bold mb-2">Tr·∫£i nghi·ªám th·ª≠ ƒë·ªì AR</h3>
                    <p>ƒêang kh·ªüi ƒë·ªông camera v√† c√¥ng c·ª• AR...</p>
                  </>
                )}
                {activeDemo === "vr" && (
                  <>
                    <Glasses className="h-16 w-16 mx-auto mb-4" />
                    <h3 className="text-2xl font-bold mb-2">Ph√≤ng tr∆∞ng b√†y ·∫£o VR</h3>
                    <p>ƒêang t·∫£i m√¥i tr∆∞·ªùng 3D...</p>
                  </>
                )}
              </div>
            </div>
          </DialogContent>
        </Dialog>
      )}
    </div>
  )
}